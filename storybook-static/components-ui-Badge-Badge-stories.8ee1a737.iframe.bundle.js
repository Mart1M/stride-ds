"use strict";(self.webpackChunkstride_ds=self.webpackChunkstride_ds||[]).push([[486],{"./src/components/ui/Badge/Badge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllSizes:()=>AllSizes,AllVariants:()=>AllVariants,Danger:()=>Danger,Default:()=>Default,Large:()=>Large,Medium:()=>Medium,NumberBadges:()=>NumberBadges,NumericBadge:()=>NumericBadge,NumericBadges:()=>NumericBadges,Outline:()=>Outline,Primary:()=>Primary,Secondary:()=>Secondary,Small:()=>Small,StatusBadges:()=>StatusBadges,Success:()=>Success,Warning:()=>Warning,WithCustomDotColor:()=>WithCustomDotColor,WithDot:()=>WithDot,WithDots:()=>WithDots,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Badge_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),dist=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),utils=__webpack_require__("./src/lib/utils.ts");const badgeVariants=(0,dist.F)(["inline-flex items-center justify-center font-sans font-medium transition-all","border rounded-full whitespace-nowrap text-center","[transition-duration:var(--transition-normal)]","[font-weight:var(--font-weight-medium)]"],{variants:{variant:{default:["[background-color:var(--bg-secondary)]","[color:var(--text-primary)]","[border-color:var(--border-primary)]"],primary:["[background-color:var(--bg-brand-muted)]","[color:var(--text-brand)]","[border-color:var(--border-brand-muted)]"],secondary:["[background-color:var(--bg-tertiary)]","[color:var(--text-secondary)]","[border-color:var(--border-secondary)]"],success:["[background-color:var(--status-success-bg)]","[color:var(--status-success-text)]","[border-color:var(--status-success)]"],warning:["[background-color:var(--status-warning-bg)]","[color:var(--status-warning-text)]","[border-color:var(--status-warning)]"],danger:["[background-color:var(--status-danger-bg)]","[color:var(--status-danger-text)]","[border-color:var(--status-danger)]"],outline:["bg-transparent","[color:var(--text-primary)]","[border-color:var(--border-primary)]"]},size:{sm:["[height:var(--badge-height-sm)]","[font-size:var(--font-size-xs)]","px-2"],md:["[height:var(--badge-height-md)]","[font-size:var(--font-size-sm)]","px-3"],lg:["[height:var(--badge-height-lg)]","[font-size:var(--font-size-md)]","px-4"]},dot:{true:"pl-1.5",false:""},numeric:{true:"min-w-[1.25rem] aspect-square justify-center items-center flex-shrink-0",false:""}},defaultVariants:{variant:"default",size:"md",dot:!1,numeric:!1}}),Badge=react.forwardRef(({className,variant,size,dot,dotColor,numeric,children,...props},ref)=>(0,jsx_runtime.jsxs)("span",{ref,className:(0,utils.cn)(badgeVariants({variant,size,dot,numeric}),className),...props,children:[dot&&(0,jsx_runtime.jsx)("span",{className:(0,utils.cn)("inline-block w-1.5 h-1.5 rounded-full mr-1.5",dotColor?`bg-[${dotColor}]`:"[background-color:var(--status-success)]")}),children]}));Badge.displayName="Badge";try{Badge.displayName="Badge",Badge.__docgenInfo={description:"",displayName:"Badge",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},dot:{defaultValue:null,description:"",name:"dot",required:!1,type:{name:"boolean"}},dotColor:{defaultValue:null,description:"",name:"dotColor",required:!1,type:{name:"string"}},numeric:{defaultValue:null,description:"",name:"numeric",required:!1,type:{name:"boolean"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:'"default" | "primary" | "secondary" | "success" | "warning" | "danger" | "outline" | null'}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:'"sm" | "md" | "lg" | null'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ui/Badge/Badge.tsx#Badge"]={docgenInfo:Badge.__docgenInfo,name:"Badge",path:"src/components/ui/Badge/Badge.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}const Badge_stories={title:"Stride DS/Badge",component:Badge,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{variant:{control:{type:"select"},options:["default","primary","secondary","success","warning","danger","outline"]},size:{control:{type:"select"},options:["sm","md","lg"]},dot:{control:{type:"boolean"}},dotColor:{control:{type:"text"}},numeric:{control:{type:"boolean"}}},args:{children:"Badge",dot:!1,numeric:!1}},Default={args:{children:"Default Badge"}},Primary={args:{variant:"primary",children:"Primary"}},Secondary={args:{variant:"secondary",children:"Secondary"}},Success={args:{variant:"success",children:"Success"}},Warning={args:{variant:"warning",children:"Warning"}},Danger={args:{variant:"danger",children:"Danger"}},Outline={args:{variant:"outline",children:"Outline"}},Small={args:{size:"sm",children:"Small"}},Medium={args:{size:"md",children:"Medium"}},Large={args:{size:"lg",children:"Large"}},WithDot={args:{dot:!0,children:"With Dot"}},WithCustomDotColor={args:{dot:!0,dotColor:"#ff6b6b",children:"Custom Dot Color"}},NumericBadge={args:{numeric:!0,variant:"danger",children:"5"}},NumericBadges={render:()=>(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-4",children:[(0,jsx_runtime.jsx)(Badge,{numeric:!0,variant:"danger",children:"1"}),(0,jsx_runtime.jsx)(Badge,{numeric:!0,variant:"danger",children:"9"}),(0,jsx_runtime.jsx)(Badge,{numeric:!0,variant:"danger",children:"12"}),(0,jsx_runtime.jsx)(Badge,{numeric:!0,variant:"danger",children:"99+"}),(0,jsx_runtime.jsx)(Badge,{numeric:!0,variant:"primary",children:"3"}),(0,jsx_runtime.jsx)(Badge,{numeric:!0,variant:"success",children:"•"})]})},AllVariants={render:()=>(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-2",children:[(0,jsx_runtime.jsx)(Badge,{variant:"default",children:"Default"}),(0,jsx_runtime.jsx)(Badge,{variant:"primary",children:"Primary"}),(0,jsx_runtime.jsx)(Badge,{variant:"secondary",children:"Secondary"}),(0,jsx_runtime.jsx)(Badge,{variant:"success",children:"Success"}),(0,jsx_runtime.jsx)(Badge,{variant:"warning",children:"Warning"}),(0,jsx_runtime.jsx)(Badge,{variant:"danger",children:"Danger"}),(0,jsx_runtime.jsx)(Badge,{variant:"outline",children:"Outline"})]})},AllSizes={render:()=>(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap items-center gap-2",children:[(0,jsx_runtime.jsx)(Badge,{size:"sm",children:"Small"}),(0,jsx_runtime.jsx)(Badge,{size:"md",children:"Medium"}),(0,jsx_runtime.jsx)(Badge,{size:"lg",children:"Large"})]})},WithDots={render:()=>(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-2",children:[(0,jsx_runtime.jsx)(Badge,{dot:!0,variant:"success",children:"Online"}),(0,jsx_runtime.jsx)(Badge,{dot:!0,variant:"warning",children:"Away"}),(0,jsx_runtime.jsx)(Badge,{dot:!0,variant:"danger",children:"Offline"}),(0,jsx_runtime.jsx)(Badge,{dot:!0,variant:"primary",children:"Active"})]})},StatusBadges={render:()=>(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold [color:var(--text-primary)] mb-2",children:"User Status"}),(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-2",children:[(0,jsx_runtime.jsx)(Badge,{dot:!0,variant:"success",children:"Online"}),(0,jsx_runtime.jsx)(Badge,{dot:!0,variant:"warning",children:"Away"}),(0,jsx_runtime.jsx)(Badge,{dot:!0,variant:"danger",children:"Offline"}),(0,jsx_runtime.jsx)(Badge,{dot:!0,variant:"secondary",children:"Invisible"})]})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold [color:var(--text-primary)] mb-2",children:"Order Status"}),(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-2",children:[(0,jsx_runtime.jsx)(Badge,{variant:"primary",children:"New"}),(0,jsx_runtime.jsx)(Badge,{variant:"warning",children:"Processing"}),(0,jsx_runtime.jsx)(Badge,{variant:"success",children:"Shipped"}),(0,jsx_runtime.jsx)(Badge,{variant:"outline",children:"Delivered"})]})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold [color:var(--text-primary)] mb-2",children:"Priority Levels"}),(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-2",children:[(0,jsx_runtime.jsx)(Badge,{variant:"danger",size:"sm",children:"High"}),(0,jsx_runtime.jsx)(Badge,{variant:"warning",size:"sm",children:"Medium"}),(0,jsx_runtime.jsx)(Badge,{variant:"success",size:"sm",children:"Low"})]})]})]})},NumberBadges={render:()=>(0,jsx_runtime.jsx)("div",{className:"space-y-4",children:(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold [color:var(--text-primary)] mb-2",children:"Notification Counts"}),(0,jsx_runtime.jsxs)("div",{className:"flex flex-wrap gap-4",children:[(0,jsx_runtime.jsxs)("div",{className:"relative",children:[(0,jsx_runtime.jsx)("button",{className:"px-4 py-2 [background-color:var(--bg-secondary)] rounded",children:"Messages"}),(0,jsx_runtime.jsx)(Badge,{numeric:!0,variant:"danger",size:"sm",className:"absolute -top-2 -right-2",children:"12"})]}),(0,jsx_runtime.jsxs)("div",{className:"relative",children:[(0,jsx_runtime.jsx)("button",{className:"px-4 py-2 [background-color:var(--bg-secondary)] rounded",children:"Notifications"}),(0,jsx_runtime.jsx)(Badge,{numeric:!0,variant:"primary",size:"sm",className:"absolute -top-2 -right-2",children:"3"})]}),(0,jsx_runtime.jsxs)("div",{className:"relative",children:[(0,jsx_runtime.jsx)("button",{className:"px-4 py-2 [background-color:var(--bg-secondary)] rounded",children:"Updates"}),(0,jsx_runtime.jsx)(Badge,{numeric:!0,variant:"success",size:"sm",className:"absolute -top-2 -right-2",children:"•"})]})]})]})})},__namedExportsOrder=["Default","Primary","Secondary","Success","Warning","Danger","Outline","Small","Medium","Large","WithDot","WithCustomDotColor","NumericBadge","NumericBadges","AllVariants","AllSizes","WithDots","StatusBadges","NumberBadges"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Default Badge"\n  }\n}',...Default.parameters?.docs?.source}}},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "primary",\n    children: "Primary"\n  }\n}',...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "secondary",\n    children: "Secondary"\n  }\n}',...Secondary.parameters?.docs?.source}}},Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "success",\n    children: "Success"\n  }\n}',...Success.parameters?.docs?.source}}},Warning.parameters={...Warning.parameters,docs:{...Warning.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "warning",\n    children: "Warning"\n  }\n}',...Warning.parameters?.docs?.source}}},Danger.parameters={...Danger.parameters,docs:{...Danger.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "danger",\n    children: "Danger"\n  }\n}',...Danger.parameters?.docs?.source}}},Outline.parameters={...Outline.parameters,docs:{...Outline.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "outline",\n    children: "Outline"\n  }\n}',...Outline.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:'{\n  args: {\n    size: "sm",\n    children: "Small"\n  }\n}',...Small.parameters?.docs?.source}}},Medium.parameters={...Medium.parameters,docs:{...Medium.parameters?.docs,source:{originalSource:'{\n  args: {\n    size: "md",\n    children: "Medium"\n  }\n}',...Medium.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:'{\n  args: {\n    size: "lg",\n    children: "Large"\n  }\n}',...Large.parameters?.docs?.source}}},WithDot.parameters={...WithDot.parameters,docs:{...WithDot.parameters?.docs,source:{originalSource:'{\n  args: {\n    dot: true,\n    children: "With Dot"\n  }\n}',...WithDot.parameters?.docs?.source}}},WithCustomDotColor.parameters={...WithCustomDotColor.parameters,docs:{...WithCustomDotColor.parameters?.docs,source:{originalSource:'{\n  args: {\n    dot: true,\n    dotColor: "#ff6b6b",\n    children: "Custom Dot Color"\n  }\n}',...WithCustomDotColor.parameters?.docs?.source}}},NumericBadge.parameters={...NumericBadge.parameters,docs:{...NumericBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    numeric: true,\n    variant: "danger",\n    children: "5"\n  }\n}',...NumericBadge.parameters?.docs?.source}}},NumericBadges.parameters={...NumericBadges.parameters,docs:{...NumericBadges.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="flex flex-wrap gap-4">\n      <Badge numeric variant="danger">\n        1\n      </Badge>\n      <Badge numeric variant="danger">\n        9\n      </Badge>\n      <Badge numeric variant="danger">\n        12\n      </Badge>\n      <Badge numeric variant="danger">\n        99+\n      </Badge>\n      <Badge numeric variant="primary">\n        3\n      </Badge>\n      <Badge numeric variant="success">\n        •\n      </Badge>\n    </div>\n}',...NumericBadges.parameters?.docs?.source}}},AllVariants.parameters={...AllVariants.parameters,docs:{...AllVariants.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="flex flex-wrap gap-2">\n      <Badge variant="default">Default</Badge>\n      <Badge variant="primary">Primary</Badge>\n      <Badge variant="secondary">Secondary</Badge>\n      <Badge variant="success">Success</Badge>\n      <Badge variant="warning">Warning</Badge>\n      <Badge variant="danger">Danger</Badge>\n      <Badge variant="outline">Outline</Badge>\n    </div>\n}',...AllVariants.parameters?.docs?.source}}},AllSizes.parameters={...AllSizes.parameters,docs:{...AllSizes.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="flex flex-wrap items-center gap-2">\n      <Badge size="sm">Small</Badge>\n      <Badge size="md">Medium</Badge>\n      <Badge size="lg">Large</Badge>\n    </div>\n}',...AllSizes.parameters?.docs?.source}}},WithDots.parameters={...WithDots.parameters,docs:{...WithDots.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="flex flex-wrap gap-2">\n      <Badge dot variant="success">\n        Online\n      </Badge>\n      <Badge dot variant="warning">\n        Away\n      </Badge>\n      <Badge dot variant="danger">\n        Offline\n      </Badge>\n      <Badge dot variant="primary">\n        Active\n      </Badge>\n    </div>\n}',...WithDots.parameters?.docs?.source}}},StatusBadges.parameters={...StatusBadges.parameters,docs:{...StatusBadges.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="space-y-4">\n      <div>\n        <h3 className="text-lg font-semibold [color:var(--text-primary)] mb-2">\n          User Status\n        </h3>\n        <div className="flex flex-wrap gap-2">\n          <Badge dot variant="success">\n            Online\n          </Badge>\n          <Badge dot variant="warning">\n            Away\n          </Badge>\n          <Badge dot variant="danger">\n            Offline\n          </Badge>\n          <Badge dot variant="secondary">\n            Invisible\n          </Badge>\n        </div>\n      </div>\n\n      <div>\n        <h3 className="text-lg font-semibold [color:var(--text-primary)] mb-2">\n          Order Status\n        </h3>\n        <div className="flex flex-wrap gap-2">\n          <Badge variant="primary">New</Badge>\n          <Badge variant="warning">Processing</Badge>\n          <Badge variant="success">Shipped</Badge>\n          <Badge variant="outline">Delivered</Badge>\n        </div>\n      </div>\n\n      <div>\n        <h3 className="text-lg font-semibold [color:var(--text-primary)] mb-2">\n          Priority Levels\n        </h3>\n        <div className="flex flex-wrap gap-2">\n          <Badge variant="danger" size="sm">\n            High\n          </Badge>\n          <Badge variant="warning" size="sm">\n            Medium\n          </Badge>\n          <Badge variant="success" size="sm">\n            Low\n          </Badge>\n        </div>\n      </div>\n    </div>\n}',...StatusBadges.parameters?.docs?.source}}},NumberBadges.parameters={...NumberBadges.parameters,docs:{...NumberBadges.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="space-y-4">\n      <div>\n        <h3 className="text-lg font-semibold [color:var(--text-primary)] mb-2">\n          Notification Counts\n        </h3>\n        <div className="flex flex-wrap gap-4">\n          <div className="relative">\n            <button className="px-4 py-2 [background-color:var(--bg-secondary)] rounded">\n              Messages\n            </button>\n            <Badge numeric variant="danger" size="sm" className="absolute -top-2 -right-2">\n              12\n            </Badge>\n          </div>\n\n          <div className="relative">\n            <button className="px-4 py-2 [background-color:var(--bg-secondary)] rounded">\n              Notifications\n            </button>\n            <Badge numeric variant="primary" size="sm" className="absolute -top-2 -right-2">\n              3\n            </Badge>\n          </div>\n\n          <div className="relative">\n            <button className="px-4 py-2 [background-color:var(--bg-secondary)] rounded">\n              Updates\n            </button>\n            <Badge numeric variant="success" size="sm" className="absolute -top-2 -right-2">\n              •\n            </Badge>\n          </div>\n        </div>\n      </div>\n    </div>\n}',...NumberBadges.parameters?.docs?.source}}}},"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}}}]);